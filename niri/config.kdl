// Check the wiki for a full description of the configuration:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Introduction
input {
    keyboard {
        xkb {
            // For more information, see xkeyboard-config(7).
            layout "us"
            options "ctrl:nocaps"
        }

        // Enable numlock on startup, omitting this setting disables it.
        repeat-delay 300
        repeat-rate 30
        numlock
    }

    // Next sections include libinput settings.
    // Omitting settings disables them, or leaves them at their default values.
    touchpad {
        // off
        tap
        dwt // Disable when typing
        drag true
        drag-lock
        natural-scroll
        accel-speed 0.0
        accel-profile "flat"
        scroll-method "two-finger"
        middle-emulation
        // disabled-on-external-mouse
    }

    mouse {
        // off
        accel-speed 0.0
        accel-profile "flat"
        middle-emulation
    }

    warp-mouse-to-focus mode="center-xy"
    focus-follows-mouse max-scroll-amount="10%"
    // workspace-auto-back-and-forth // Very disorienting
}

output "eDP-1" {
    // off
    // You can use integer or fractional scale, for example use 1.5 for 150% scale.
    scale 1.0
    transform "normal" // normal, 90, 180, 270, flipped, flipped-90, flipped-180 and flipped-270.
}

// Settings that influence how windows are positioned and sized.
layout {
    gaps 8
    center-focused-column "on-overflow" // options are: "never", "always", "on-overflow"
    background-color "transparent" // Needed to show swww-daemon from the background
    default-column-display "normal"
    always-center-single-column
    // empty-workspace-above-first

    preset-column-widths {
        proportion 0.25
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        proportion 1.0
    }
    preset-window-heights {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    // If you leave the brackets empty, the windows themselves will decide their initial width.
    default-column-width { proportion 0.5; }
    focus-ring {
        // off
        width 2
        active-color "#7fc8ff"
        inactive-color "#505050"
        // active-gradient from="#80c8ff" to="#bbddff" angle=45
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    border {
        off
        width 2
        active-color "#ffc87f"
        inactive-color "#505050"
        urgent-color "#9b0000"
        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    shadow {
        // on
        // draw-behind-window true
        softness 30
        spread 5
        offset x=0 y=5
        color "#0007"
    }
    tab-indicator {
        // off
        hide-when-single-tab
        place-within-column
        gap 5
        width 4
        length total-proportion=1.0
        position "right"
        gaps-between-tabs 2
        corner-radius 8
        active-color "red"
        inactive-color "gray"
        urgent-color "blue"
        // active-gradient from="#80c8ff" to="#bbddff" angle=45
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
        // urgent-gradient from="#800" to="#a33" angle=45
    }
    insert-hint {
        // off
        color "#ffc87f80"
        // gradient from="#ffbb6680" to="#ffc88080" angle=45 relative-to="workspace-view"
    }

    struts {
        // Gaps around a window in a workspace
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

spawn-at-startup "xwayland-satellite"
spawn-at-startup "swww-daemon" "--format" "xrgb"
spawn-at-startup "~/.config/waybar/launch.sh"
spawn-at-startup "~/.config/dunst/launch-dunst.sh"
spawn-at-startup "/usr/lib/kdeconnectd"
spawn-at-startup "/usr/bin/kdeconnect-indicator"
spawn-at-startup "nm-applet" "--indicator"
spawn-at-startup "blueman-applet"
spawn-at-startup "wl-clipboard"
spawn-at-startup "foot" "--server"
spawn-at-startup "swayidle" "-w"
spawn-at-startup "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
spawn-at-startup "wl-paste" "--type" "text" "--watch" "cliphist" "store"
spawn-at-startup "wl-paste" "--type" "image" "--watch" "cliphist" "store"
// spawn-at-startup "dbus-update-activation-environment" "--systemd" "WAYLAND_DISPLAY" "XDG_CURRENT_DESKTOP=niri"
// spawn-at-startup "systemctl" "--user" "import-environment" "WAYLAND_DISPLAY" "XDG_CURRENT_DESKTOP=niri"

workspace "Scratchpad"
workspace "Main"
workspace "Media"
prefer-no-csd
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

// Animation settings.
animations {
    // off
    slowdown 1.0
}

environment {
    DISPLAY ":0"
    XCURSOR_THEME "Bibata-Modern-Classic"
    XCURSOR_SIZE "18"
    XDG_CURRENT_DESKTOP "Niri"
    XDG_SESSION_DESKTOP "Niri"
    XDG_SESSION_TYPE "wayland"
    MOZ_ENABLE_WAYLAND "1"
    ELECTRON_OZONE_PLATFORM_HINT "wayland"
    BEMENU_BACKEND "wayland"
    CLUTTER_BACKEND "wayland"
    SDL_VIDEODRIVER "wayland"
    QT_QPA_PLATFORM "wayland;xcb"
    QT_QPA_PLATFORMTHEME "qt6ct"
    QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
    QT_SCALE_FACTOR "1"
    QT_AUTO_SCREEN_SCALE_FACTOR "1"
    GDK_SCALE "1"
    GDK_BACKEND "wayland,x11,*"
    GTK_USE_PORTAL "1"
    WLR_NO_HARDWARE_CURSORS "1"
}

cursor {
    xcursor-theme "Bibata-Modern-Classic"
    xcursor-size 18
    hide-when-typing
    hide-after-inactive-ms 10000
}

overview {
    zoom 0.5
    backdrop-color "#333333"

    workspace-shadow {
        // off
        softness 20
        spread 20
        offset x=0 y=10
        color "#00000080"
    }
}

layer-rule {
    // Send swww wallpaper to backdrop, show behind overview too
    // Set backdrop-color to transparent in layout
    match namespace="swww-daemon"
    place-within-backdrop true
}

clipboard {
    disable-primary // Disable the middle click paste clipboard
}

hotkey-overlay {
    // hide-not-bound
    skip-at-startup
}

gestures {
    dnd-edge-view-scroll {
        trigger-width 30
        delay-ms 100
        max-speed 1500
    }

    dnd-edge-workspace-switch {
        trigger-height 50
        delay-ms 100
        max-speed 1500
    }

    hot-corners {
        // off
    }
}
// Window rules let you adjust behavior for individual windows.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules


// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    // This app-id regular expression will work for both:
    // - host Firefox (app-id is "firefox")
    // - Flatpak Firefox (app-id is "org.mozilla.firefox")
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

// Example: enable rounded corners for all windows.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    geometry-corner-radius 15
    clip-to-geometry true
}

window-rule {
  match app-id=r#"^special*"#
  default-column-width { proportion 0.8; }
  open-on-workspace "Scratchpad"
}

/- switch-events {
    lid-close { spawn "notify-send" "The laptop lid is closed!"; }
    lid-open { spawn "notify-send" "The laptop lid is open!"; }
}

binds {
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+T hotkey-overlay-title="Open a Terminal: Foot" { spawn "footclient"; }
    Mod+R hotkey-overlay-title="Run an Application: Rofi" { spawn "rofi" "-show" "drun"; }
    Mod+F hotkey-overlay-title="Open File Manager" {  spawn "thunar"; }
    Mod+B hotkey-overlay-title="Open Browser" { spawn "zen-browser"; }
    Mod+O hotkey-overlay-title="Open Notes: Obsidian" { spawn "obsidian"; }
    Mod+W hotkey-overlay-title="Open Whatsapp" { spawn "ferdium"; }
    Mod+D hotkey-overlay-title="Open Discord" { spawn "vesktop"; }
    Mod+G hotkey-overlay-title="Open Retroarch" { spawn "retroarch"; }
    Mod+S hotkey-overlay-title="Open Spotify" { spawn "spotify"; }
    Mod+A hotkey-overlay-title="Open Anki" { spawn "anki"; }
    Mod+I hotkey-overlay-title="Open Ticktick" { spawn "ticktick"; }
    Mod+E hotkey-overlay-title="Open Yazi" { spawn "foot" "-e" "zsh" "-ic" "yazi"; }
    Mod+M hotkey-overlay-title="Open Btop" { spawn "foot" "-e" "zsh" "-ic" "btop"; }

    Mod+Shift+M { spawn "~/.config/niri/spawn-or-focus.sh" "special-btop"; }
    Mod+Shift+E { spawn "~/.config/niri/spawn-or-focus.sh" "special-files"; }
    Mod+Shift+T { spawn "~/.config/niri/spawn-or-focus.sh" "special-term"; }
    Mod+Shift+N { spawn "~/.config/niri/spawn-or-focus.sh" "special-nvim"; }
    Mod+Shift+P { spawn "~/.config/niri/spawn-or-focus.sh" "special-project"; }

    Mod+C { spawn "~/scripts/colorpicker"; }
    Mod+Tab { spawn "~/scripts/random-swwwbg"; }
    Mod+Grave { spawn "~/scripts/list-river-window"; }
    Mod+V { spawn "~/scripts/rofi-clipboard"; }
    Mod+Escape { spawn "~/scripts/rofi-power"; }
    Mod+Ctrl+W { spawn "~/scripts/rofi-wifi"; }
    Mod+Ctrl+B { spawn "~/scripts/rofi-bluetooth"; }
    Mod+Ctrl+S { spawn "~/scripts/rofi-wall"; }
    Mod+Ctrl+C { spawn "~/scripts/text-picker"; }
    Mod+Ctrl+D { spawn "~/scripts/rofi-docs"; }

    Super+Alt+L hotkey-overlay-title="Lock the Screen: Gtklock" { spawn "gtklock"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn "~/scripts/volume" "up"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "~/scripts/volume" "down"; }
    XF86AudioMute        allow-when-locked=true { spawn "~/scripts/volume" "mute"; }

    XF86MonBrightnessUp { spawn "~/scripts/brightness" "up"; }
    XF86MonBrightnessDown { spawn "~/scripts/brightness" "down"; }

    XF86AudioMedia { spawn "playerctl" "play-pause"; }
    XF86AudioPlay { spawn "playerctl" "play-pause"; }
    XF86AudioPrev { spawn "playerctl" "previous"; }
    XF86AudioNext {spawn "playerctl" "next"; }

    // Open/close the Overview: a zoomed-out view of workspaces and windows.
    // You can also move the mouse into the top-left hot corner,
    // or do a four-finger swipe up on a touchpad.
    Mod+Space repeat=false { toggle-overview; }

    Mod+Q { close-window; }
    Mod+Shift+Q { quit; }

    Mod+Ctrl+T { toggle-column-tabbed-display; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-or-workspace-down; }
    Mod+Up    { focus-window-or-workspace-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }

    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down; }
    Mod+Ctrl+K     { move-window-up; }
    Mod+Ctrl+L     { move-column-right; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { focus-column-right; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { focus-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollUp   { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }

    Mod+TouchpadScrollDown allow-when-locked=true { spawn "~/scripts/volume" "up"; }
    Mod+TouchpadScrollUp allow-when-locked=true { spawn "~/scripts/volume" "down"; }

    Mod+TouchpadScrollLeft { spawn "~/scripts/brightness" "up"; }
    Mod+TouchpadScrollRight { spawn "~/scripts/brightness" "down"; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Mod+0 { focus-workspace 1; }
    Mod+1 { focus-workspace 2; }
    Mod+2 { focus-workspace 3; }
    Mod+3 { focus-workspace 4; }
    Mod+4 { focus-workspace 5; }
    Mod+5 { focus-workspace 6; }
    Mod+6 { focus-workspace 7; }
    Mod+7 { focus-workspace 8; }
    Mod+8 { focus-workspace 9; }
    Mod+9 { focus-workspace 10; }
    Mod+Shift+0 { move-window-to-workspace 1; }
    Mod+Shift+1 { move-window-to-workspace 2; }
    Mod+Shift+2 { move-window-to-workspace 3; }
    Mod+Shift+3 { move-window-to-workspace 4; }
    Mod+Shift+4 { move-window-to-workspace 5; }
    Mod+Shift+5 { move-window-to-workspace 6; }
    Mod+Shift+6 { move-window-to-workspace 7; }
    Mod+Shift+7 { move-window-to-workspace 8; }
    Mod+Shift+8 { move-window-to-workspace 9; }
    Mod+Shift+9 { move-window-to-workspace 10; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    // Mod+R { switch-preset-column-width; }
    // Mod+Shift+R { switch-preset-window-height; }
    // Mod+Ctrl+R { reset-window-height; }
    // Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+Ctrl+F { toggle-window-floating; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    // Mod+Ctrl+F { expand-column-to-available-width; }

    // Mod+C { center-column; }

    // Center all fully visible columns on screen.
    // Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Plus { set-column-width "100%"; }

    // Finer height adjustments when in column with other windows.
    // Mod+Shift+Minus { set-window-height "-10%"; }
    // Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    // Mod+V       { toggle-window-floating; }
    // Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    // Mod+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+F11 allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }


    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    // Mod+Shift+P { power-off-monitors; }
}
