#! /usr/bin/env bash

# Load environment variables
source "$HOME/.config/river/environment.sh"

# Load hellwal colors to apply to borders
source "$HOME/.cache/hellwal/variables.sh"

# Variables
terminal="footclient"
filemanager="thunar"
browser="floorp"
mod="Mod4"

# The Figlet font is DOS Rebel from https://github.com/xero/figlet-fonts/blob/master/Examples.md

#    █████████               █████                      █████                         █████
#   ███░░░░░███             ░░███                      ░░███                         ░░███
#  ░███    ░███  █████ ████ ███████    ██████   █████  ███████    ██████   ████████  ███████
#  ░███████████ ░░███ ░███ ░░░███░    ███░░███ ███░░  ░░░███░    ░░░░░███ ░░███░░███░░░███░
#  ░███░░░░░███  ░███ ░███   ░███    ░███ ░███░░█████   ░███      ███████  ░███ ░░░   ░███
#  ░███    ░███  ░███ ░███   ░███ ███░███ ░███ ░░░░███  ░███ ███ ███░░███  ░███       ░███ ███
#  █████   █████ ░░████████  ░░█████ ░░██████  ██████   ░░█████ ░░████████ █████      ░░█████
# ░░░░░   ░░░░░   ░░░░░░░░    ░░░░░   ░░░░░░  ░░░░░░     ░░░░░   ░░░░░░░░ ░░░░░        ░░░░░

# Autostart
riverctl spawn "swww-daemon --format xrgb"
riverctl spawn "$HOME/.config/waybar/launch.sh"
riverctl spawn "$HOME/.config/dunst/launch-dunst.sh"
riverctl spawn "/usr/lib/kdeconnectd"
riverctl spawn "/usr/bin/kdeconnect-indicator"
# riverctl spawn "nm-applet --indicator"
# riverctl spawn "blueman-applet"
riverctl spawn "wl-clipboard"
riverctl spawn "foot --server"
riverctl spawn "swayidle -w"
riverctl spawn "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
riverctl spawn "dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"
riverctl spawn "systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"
# riverctl spawn "wlr-randr --output eDP-1 --scale 1.00"

# Clipboard History
riverctl spawn "wl-paste --type text --watch cliphist store"  #Stores only text data
riverctl spawn "wl-paste --type image --watch cliphist store" #Stores only image data

#   █████████            █████     █████     ███
#  ███░░░░░███          ░░███     ░░███     ░░░
# ░███    ░░░   ██████  ███████   ███████   ████  ████████    ███████  █████
# ░░█████████  ███░░███░░░███░   ░░░███░   ░░███ ░░███░░███  ███░░███ ███░░
#  ░░░░░░░░███░███████   ░███      ░███     ░███  ░███ ░███ ░███ ░███░░█████
#  ███    ░███░███░░░    ░███ ███  ░███ ███ ░███  ░███ ░███ ░███ ░███ ░░░░███
# ░░█████████ ░░██████   ░░█████   ░░█████  █████ ████ █████░░███████ ██████
#  ░░░░░░░░░   ░░░░░░     ░░░░░     ░░░░░  ░░░░░ ░░░░ ░░░░░  ░░░░░███░░░░░░
#                                                            ███ ░███
#                                                           ░░██████
#                                                            ░░░░░░

# Settings

# Set background and border color
riverctl background-color "0x${color8}"
riverctl border-width 2
riverctl border-color-focused "0x${color6}"
riverctl border-color-unfocused "0x${color1}"

riverctl set-repeat 30 300
riverctl default-attach-mode bottom
riverctl focus-follows-cursor always
riverctl hide-cursor timeout 10000 # 10 Seconds in milliseconds
riverctl hide-cursor when-typing enabled
riverctl set-cursor-warp on-focus-change
riverctl xcursor-theme "Bibata-Modern-Classic" 18

riverctl keyboard-layout -options "ctrl:nocaps" us # Map capslock to ctrl
# riverctl keyboard-layout -options "caps:escape" us # Map capslock to escape

# Touchpad Settings
# Get device name from riverctl list-inputs
riverctl input "pointer-2-7-SynPS/2_Synaptics_TouchPad" tap enabled
riverctl input "pointer-2-7-SynPS/2_Synaptics_TouchPad" accel-profile flat
riverctl input "pointer-2-7-SynPS/2_Synaptics_TouchPad" natural-scroll enabled
riverctl input "pointer-2-7-SynPS/2_Synaptics_TouchPad" disable-while-typing enabled
riverctl input "pointer-2-7-SynPS/2_Synaptics_TouchPad" disable-while-trackpointing enabled

# Disable touchpad
riverctl input "pointer-2-7-SynPS/2_Synaptics_TouchPad" events disabled
#
# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 5 -outer-padding 5 -main-ratio 0.5 -main-count 1 &

#   █████████                                █████             █████                              █████
#  ███░░░░░███                              ░░███             ░░███                              ░░███
# ░███    ░░░   ██████  ████████   ██████   ███████    ██████  ░███████   ████████   ██████    ███████
# ░░█████████  ███░░███░░███░░███ ░░░░░███ ░░░███░    ███░░███ ░███░░███ ░░███░░███ ░░░░░███  ███░░███
#  ░░░░░░░░███░███ ░░░  ░███ ░░░   ███████   ░███    ░███ ░░░  ░███ ░███  ░███ ░███  ███████ ░███ ░███
#  ███    ░███░███  ███ ░███      ███░░███   ░███ ███░███  ███ ░███ ░███  ░███ ░███ ███░░███ ░███ ░███
# ░░█████████ ░░██████  █████    ░░████████  ░░█████ ░░██████  ████ █████ ░███████ ░░████████░░████████
#  ░░░░░░░░░   ░░░░░░  ░░░░░      ░░░░░░░░    ░░░░░   ░░░░░░  ░░░░ ░░░░░  ░███░░░   ░░░░░░░░  ░░░░░░░░
#                                                                         ░███
#                                                                         █████
#                                                                        ░░░░░
# Scratchpads
all_tags=$(((1 << 32) - 1))
sticky_tag=$((1 << 31))
special_tag=$((1 << 30))

terminal_tag=$((1 << 11))
files_tag=$((1 << 12))
dots_tag=$((1 << 13))
monitor_tag=$((1 << 14))
docs_tag=$((1 << 15))
ticktick_tag=$((1 << 16))
spotify_tag=$((1 << 17))
project_tag=$((1 << 18))
# special3_tag=$((1 << 19))

scratch_tags=$((special_tag | sticky_tag | terminal_tag | files_tag | dots_tag | monitor_tag | docs_tag | ticktick_tag | spotify_tag | project_tag))

all_but_scratch_tag=$((all_tags ^ scratch_tags))
riverctl spawn-tagmask ${all_but_scratch_tag}

scratchpad="$HOME/.config/river/scratchpads.sh"

riverctl map normal $mod+Shift T spawn "$scratchpad term"
riverctl map normal $mod+Shift M spawn "$scratchpad btop"
riverctl map normal $mod+Shift E spawn "$scratchpad files"
riverctl map normal $mod+Shift N spawn "$scratchpad nvim"
riverctl map normal $mod+Shift P spawn "$scratchpad project"

# Mapping for sending to stickypad
# riverctl map normal $mod Slash toggle-view-tags $sticky_tag
# Show sticky windows on scratch_tags too
riverctl map normal $mod Slash toggle-view-tags $(($sticky_tag | $scratch_tags))

# mapping for sending to special_tag (Scratchpad)
riverctl map normal $mod Space set-view-tags $special_tag
riverctl map normal $mod+Shift Space toggle-focused-tags $special_tag

# Make this tags toggle with same keybind, and set rule for apps to be
# fullscreen, or else they till with active apps.
riverctl map normal $mod+Shift D toggle-focused-tags $docs_tag
riverctl map normal $mod+Shift S toggle-focused-tags $spotify_tag
riverctl map normal $mod+Shift I toggle-focused-tags $ticktick_tag

#  ███████████   ███                 █████
# ░░███░░░░░███ ░░░                 ░░███
#  ░███    ░███ ████  ████████    ███████   █████
#  ░██████████ ░░███ ░░███░░███  ███░░███  ███░░
#  ░███░░░░░███ ░███  ░███ ░███ ░███ ░███ ░░█████
#  ░███    ░███ ░███  ░███ ░███ ░███ ░███  ░░░░███
#  ███████████  █████ ████ █████░░████████ ██████
# ░░░░░░░░░░░  ░░░░░ ░░░░ ░░░░░  ░░░░░░░░ ░░░░░░

# Binds

# My Mappings
riverctl map normal $mod T spawn "$terminal"
riverctl map normal $mod F spawn "$filemanager"
riverctl map normal $mod B spawn "$browser"
riverctl map normal $mod R spawn "rofi -show drun"
riverctl map normal $mod O spawn "obsidian"
riverctl map normal $mod W spawn "ferdium"
riverctl map normal $mod D spawn "webcord"
riverctl map normal $mod D spawn "vesktop"
riverctl map normal $mod G spawn "retroarch"
riverctl map normal $mod S spawn "spotify-launcher"
riverctl map normal $mod Y spawn "youtube-music"
riverctl map normal $mod I spawn "ticktick"
riverctl map normal $mod E spawn "$terminal -e zsh -ic yazi"
riverctl map normal $mod M spawn "$terminal -e btop"
riverctl map normal $mod KP_Add spawn "galculator"

riverctl map normal $mod Q close
riverctl map normal $mod+Shift Q exit
riverctl map normal $mod+Control F toggle-float
riverctl map normal $mod+Shift F toggle-fullscreen

riverctl map normal $mod+Control R spawn "$HOME/.config/river/init >/dev/null && notify-send 'Refreshed River'"

#Scripts
riverctl map normal $mod C spawn "$HOME/scripts/colorpicker"
riverctl map normal $mod Tab spawn "$HOME/scripts/random-swwwbg"
riverctl map normal $mod Grave spawn "$HOME/scripts/list-river-window"
riverctl map normal $mod Escape spawn "$HOME/scripts/rofi-power"
riverctl map normal $mod+Control W spawn "$HOME/scripts/rofi-wifi"
riverctl map normal $mod+Control B spawn "$HOME/scripts/rofi-bluetooth"
riverctl map normal $mod+Control S spawn "$HOME/scripts/rofi-wall"

# Screenshots
riverctl map normal None Print spawn "$HOME/scripts/screenshots/captureAll.sh"
riverctl map normal Control Print spawn "$HOME/scripts/screenshots/captureScreen.sh"
riverctl map normal Control+Shift Print spawn "$HOME/scripts/screenshots/captureArea.sh"

riverctl map normal $mod V spawn "cliphist list | rofi -dmenu -p 'Clipboard' -config $HOME/.config/rofi/regular.rasi | cliphist decode | wl-copy"

for i in $(seq 1 9); do
  # Tags are basically workspaces, but different
  tags=$((1 << ("$i" - 1)))
  # Move focus to Tag(Workspace)
  riverctl map normal $mod "$i" set-focused-tags $(($sticky_tag + $tags))
  # Move view(window) to Tag(Workspace)
  riverctl map normal $mod+Shift "$i" set-view-tags $tags
  # Show view(window) from specified tag on current tag(workspace)
  riverctl map normal $mod+Control "$i" toggle-focused-tags $tags
  # Show focused view(window) on specified tag(workspace)
  riverctl map normal $mod+Shift+Control "$i" toggle-view-tags $tags
done

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do
  # Eject the optical drive (well if you still have one that is)
  riverctl map $mode None XF86Eject spawn 'eject -T'

  riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
  riverctl map $mode None XF86AudioPlay spawn 'playerctl play-pause'
  riverctl map $mode None XF86AudioPrev spawn 'playerctl previous'
  riverctl map $mode None XF86AudioNext spawn 'playerctl next'

  riverctl map $mode None XF86AudioRaiseVolume spawn "$HOME/scripts/volume up"
  riverctl map $mode None XF86AudioLowerVolume spawn "$HOME/scripts/volume down"
  riverctl map $mode None XF86AudioMute spawn "$HOME/scripts/volume mute"

  riverctl map $mode None XF86MonBrightnessUp spawn "$HOME/scripts/brightness up"
  riverctl map $mode None XF86MonBrightnessDown spawn "$HOME/scripts/brightness down"
done

# Mouse binds
riverctl map-pointer normal $mod BTN_LEFT move-view
riverctl map-pointer normal $mod BTN_RIGHT resize-view
riverctl map-pointer normal $mod BTN_MIDDLE toggle-float

# $mod+0 to focus all tags
# $mod+Shift+0 to tag focused view with all tags
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

riverctl map-switch normal lid close "swaylock -f"

# $mod+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod Return zoom

# Move all these binds to a floating mode, since that's where the work
riverctl declare-mode floating
riverctl map normal Alt F enter-mode floating

# -repeat makes the bind repeatable, while it not released
# {H,J,K,L} to resize views by 25
riverctl map -repeat floating None H resize horizontal -25
riverctl map -repeat floating None J resize vertical 25
riverctl map -repeat floating None K resize vertical -25
riverctl map -repeat floating None L resize horizontal 25

# Control+{H,J,K,L} to move views by 25
riverctl map -repeat floating Control H move left 25
riverctl map -repeat floating Control J move down 25
riverctl map -repeat floating Control K move up 25
riverctl map -repeat floating Control L move right 25

# Shift+{H,J,K,L} to snap views to screen edges
riverctl map floating Shift H snap left
riverctl map floating Shift J snap down
riverctl map floating Shift K snap up
riverctl map floating Shift L snap right

riverctl map floating None Escape enter-mode normal

# Focus windows with $mod h/j/k/l
riverctl map normal $mod+Control H focus-view left
riverctl map normal $mod+Control J focus-view down
riverctl map normal $mod+Control K focus-view up
riverctl map normal $mod+Control L focus-view right

#Focus windows with $mod Arrow keys
riverctl map normal $mod Left focus-view left
riverctl map normal $mod Down focus-view down
riverctl map normal $mod Up focus-view up
riverctl map normal $mod Right focus-view right

# $mod+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal $mod+Control N focus-view next
riverctl map normal $mod+Control P focus-view previous

# Swap views(windows) with $mod+Shift h/j/k/l
riverctl map normal $mod+Shift Left swap left
riverctl map normal $mod+Shift Down swap down
riverctl map normal $mod+Shift Up swap up
riverctl map normal $mod+Shift Right swap right

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# $mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# $mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

riverctl declare-mode resize
riverctl map normal Alt R enter-mode resize
# {Up,Right,Down,Left} to change layout orientation
riverctl map resize None Up send-layout-cmd rivertile "main-location top"
riverctl map resize None Right send-layout-cmd rivertile "main-location right"
riverctl map resize None Down send-layout-cmd rivertile "main-location bottom"
riverctl map resize None Left send-layout-cmd rivertile "main-location left"
#
# $mod+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map resize $mod H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map resize $mod L send-layout-cmd rivertile "main-ratio +0.05"

# $mod+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map resize $mod+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map resize $mod+Shift L send-layout-cmd rivertile "main-count -1"
riverctl map resize None Escape enter-mode normal
#
# $mod+Period and Super+Comma to focus the next/previous output(Monitor/Screen)
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# $mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

#  ███████████              ████
# ░░███░░░░░███            ░░███
#  ░███    ░███  █████ ████ ░███   ██████   █████
#  ░██████████  ░░███ ░███  ░███  ███░░███ ███░░
#  ░███░░░░░███  ░███ ░███  ░███ ░███████ ░░█████
#  ░███    ░███  ░███ ░███  ░███ ░███░░░   ░░░░███
#  █████   █████ ░░████████ █████░░██████  ██████
# ░░░░░   ░░░░░   ░░░░░░░░ ░░░░░  ░░░░░░  ░░░░░░

# Rules
# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add ssd

riverctl rule-add -app-id "floorp" tags $((1 << (1 - 1)))
riverctl rule-add -app-id "firefox" tags $((1 << (1 - 1)))
riverctl rule-add -app-id "Code" tags $((1 << (2 - 1)))
riverctl rule-add -app-id "special-go" tags $((1 << (2 - 1)))
riverctl rule-add -app-id "dev.zed.Zed" tags $((1 << (2 - 1)))
riverctl rule-add -app-id "org.gnome.Nautilus" tags $((1 << (3 - 1)))
riverctl rule-add -app-id "thunar" tags $((1 << (3 - 1)))
riverctl rule-add -app-id "org.libretro.RetroArch" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "Celeste.bin.x86_64" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "hollow_knight.x86_64" tags $((1 << (4 - 1)))
riverctl rule-add -title "Brawlhalla" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "citra-qt" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "es-de" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "steam" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "Ferdium" tags $((1 << (5 - 1)))
riverctl rule-add -app-id "org.telegram.desktop" tags $((1 << (5 - 1)))
riverctl rule-add -app-id "WebCord" tags $((1 << (6 - 1)))
riverctl rule-add -app-id "vesktop" tags $((1 << (6 - 1)))
riverctl rule-add -app-id "obsidian" tags $((1 << (7 - 1)))

riverctl rule-add -app-id "special-term" tags $terminal_tag
riverctl rule-add -app-id "special-files" tags $files_tag
riverctl rule-add -app-id "special-nvim" tags $dots_tag
riverctl rule-add -app-id "special-btop" tags $monitor_tag
riverctl rule-add -app-id "special-project" tags $project_tag
riverctl rule-add -app-id "ticktick" tags $ticktick_tag
riverctl rule-add -app-id "mpv" tags $docs_tag
riverctl rule-add -app-id "org.pwmt.zathura" tags $docs_tag
riverctl rule-add -app-id "Spotify" tags $spotify_tag
riverctl rule-add -title "YouTube Music" tags $spotify_tag
riverctl rule-add -app-id "org.qbittorrent.qBittorrent" tags $special_tag

riverctl rule-add -title "Brawlhalla" fullscreen
riverctl rule-add -app-id "org.pwmt.zathura" fullscreen
riverctl rule-add -app-id "mpv" fullscreen
riverctl rule-add -app-id "Spotify" fullscreen
riverctl rule-add -app-id "ticktick" fullscreen
riverctl rule-add -app-id "feh" fullscreen
riverctl rule-add -app-id "org.libretro.RetroArch" fullscreen
riverctl rule-add -app-id "es-de" fullscreen

riverctl rule-add -title "Special Offers" float # Steam
riverctl rule-add -title "Friends List" float   # Steam
riverctl rule-add -title "Steam Settings" float # Steam
riverctl rule-add -app-id "steam" -title "Brawlhalla" float
riverctl rule-add -app-id "galculator" float
riverctl rule-add -app-id "org.kde.kcalc" float
riverctl rule-add -app-id "blueman-manager" float
riverctl rule-add -app-id "org.kde.kdeconnect.app" float
riverctl rule-add -app-id "nm-connection-editor" float
riverctl rule-add -app-id "org.kde.polkit-kde-authentication-agent-1" float
riverctl rule-add -app-id "polkit-gnome-authentication-agent-1" float
riverctl rule-add -app-id "org.qbittorrent.qBittorrent" float

riverctl rule-add -app-id 'org.pulseaudio.pavucontrol' float
riverctl rule-add -app-id 'GParted' float
riverctl rule-add -app-id 'nwg-look' float
riverctl rule-add -app-id 'firefox' -title 'Picture-in-Picture' float
riverctl rule-add -app-id 'floorp' -title 'Picture-in-Picture' float
riverctl rule-add -title 'gtk*' float
riverctl rule-add -app-id 'xdg-desktop-portal-gtk' float

riverctl rule-add -app-id float float
riverctl rule-add -title "popup title with spaces" float
riverctl rule-add -title "zoom" float
riverctl rule-add -title "Picture-in-Picture" float
